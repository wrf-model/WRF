

on :
  workflow_call :
    inputs :
      label : 
        required : true
        type     : string
      hpc-workflows_path :
        required : true
        type     : string
      archive :
        required : true
        type     : string
      
      name     :
        required : true
        type     : string
      id       :
        required : true
        type     : string
      host     :
        required : true
        type     : string
      config :
        required : true
        type     : string
      account  :
        required : true
        type     : string
      tests    :
        required : true
        type     : string
      mkdirs   :
        required : true
        type     : boolean
      args     :
        required : false
        type     : string
        default  : ""
      pool     :
        required : false
        type     : number
        default  : 1
      tpool      :
        required : false
        type     : number
        default  : 1
    
      event_name :
        required : true
        type     : string
      event_number: 
        required : true
        type     : string
      event_label: 
        required : true
        type     : string
      ref        :
        required : true
        type     : string
      sha        :
        required : true
        type     : string
      


jobs:
  test_workflow :

    # Is 5 days a reasonable wait time for testing?
    timeout-minutes: 7200
    name: Test ${{ inputs.name }} on ${{ inputs.host }}
    runs-on: ${{ inputs.host }}
    env :
      LOG_SUFFIX : ${{ inputs.event_name == 'push' && github.ref_name || inputs.event_number }}
    steps:
    # Don't use gh checks as they are woefully underdeveloped as a feature leading
    # to confusing UI and misplaced metrics
    # https://github.com/orgs/community/discussions/24616
    - name: Set pending status
      id: check_run_start
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.repos.createCommitStatus({
            owner:      context.repo.owner,
            repo:       context.repo.repo,
            sha:        '${{ inputs.event_name == 'push' && github.sha || inputs.sha }}',
            target_url: '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}',
            description: '${{ inputs.name }}',
            context:     '${{ inputs.host }}/${{ inputs.id }}',
            state:      'pending'
          })

    - name: Get fileroot of test config
      id: get_fileroot
      run: |
        filename=$( basename ${{ inputs.config }} )
        echo "rel_dir=$( dirname ${{ inputs.config }} )" >> "$GITHUB_ENV"
        echo "fileroot=${filename%.*}" >> "$GITHUB_ENV"
    
    - uses: actions/checkout@v4
      with:
        path      : main
        submodules: true
        ref: ${{ inputs.event_name == 'push' && github.ref || inputs.ref }}

    ############################################################################
    # WRF Specific
    # More checkout, just do everything so we have it all at the ready. This unfortunately will limit testing 
    # of on-the-fly checkouts
    - name: Checkout extra via manage_externals
      id  : manage_externals
      run : |
        cd main
        ./tools/manage_externals/checkout_externals -e arch/Externals.cfg 
        ./tools/manage_externals/checkout_externals -e arch/OptionalExternals_testing.cfg
    ############################################################################

    
    # Immediately copy out to # of tests to do
    - name: Create testing directories
      if  : ${{ inputs.mkdirs }}
      id  : cpTestDirs
      run : |
        # Limit parallel ops to 4 at a time to not thrash login nodes

        # Remove if it exists to get a fresh start
        echo "Cleaning old test directories..."
        tests="${{ join( fromJson( inputs.tests ), ' ' ) }}"
        time printf "%s\n" $tests | xargs -i -P 4 rm -rf {}

        echo "Creating duplicate directory for $tests"
        time printf "%s\n" $tests | xargs -i -P 4 cp -Rp main/ {}

    - name: Test ${{ inputs.name }}
      id  : runTest
      run: |
        if [ "${{ inputs.mkdirs }}" = "true" ]; then
          ALT_DIRS="-alt ../${{ join( fromJson( inputs.tests ), format( '/{0} ../', env.rel_dir ) ) }}/$rel_dir"
        fi
        ./main/${{ inputs.hpc-workflows_path }}/.ci/runner.py                   \
          ./main/${{ inputs.config }}                   \
          -t   ${{ join( fromJson( inputs.tests ), ' ' ) }}  \
          -a "${{ inputs.account }}"                         \
          -p ${{ inputs.pool}} -tp ${{ inputs.tpool }}       \
          -jn ${{ inputs.event_name == 'push' && github.ref_name || inputs.event_number }}-${{ inputs.id }} \
          ${{ inputs.args }} $ALT_DIRS


    - name: Report failed tests and steps
      if : ${{ failure() }}
      run : |
        # move log files to safe location
        ./main/${{ inputs.hpc-workflows_path }}/.ci/relocator.py ./main/$rel_dir/$fileroot.log ${{ inputs.archive }}/$LOG_SUFFIX/${{ inputs.id }}

        # report on them - alt dirs need extra help
        if [ "${{ inputs.mkdirs }}" = "true" ]; then
          masterlogLoc=main/$rel_dir
        fi
        ./main/${{ inputs.hpc-workflows_path }}/.ci/reporter.py ${{ inputs.archive }}/$LOG_SUFFIX/${{ inputs.id }}/$masterlogLoc/$fileroot.log \
                                             -e ./${{ inputs.hpc-workflows_path }}/.ci/runner.py -p ./$rel_dir \
                                             -o GITHUB -m -n # only mark fail steps with gh syntax

        echo "Relaying results to summary..."
        
        # report on them
        echo "# Summary for ${{ inputs.name }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        ./main/${{ inputs.hpc-workflows_path }}/.ci/reporter.py ${{ inputs.archive }}/$LOG_SUFFIX/${{ inputs.id }}/$masterlogLoc/$fileroot.log \
                                             -e ./${{ inputs.hpc-workflows_path }}/.ci/runner.py -p ./$rel_dir \
                                             -s -n >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        # We know this is a failure
        exit 1

    - name: Clean up testing directories
      if : ${{ success() }}
      id  : rmTestDirs
      run : |
        for testDir in ${{ join( fromJson( inputs.tests ), ' ' ) }}; do
          echo "Removing duplicate directory for $testDir"
          rm -rf $testDir
        done
    
    - name: Upload test logs
      if  : ${{ failure() }}
      uses : actions/upload-artifact@v4
      with:
        # as per usual with ci/cd stuff I am shocked but not surprised when the advertised
        # *documented* functionality doesn't work as expected. Wow, bravo
        # can't use ${{ env. }} as somehow this combination of matrix->reusable workflow->call step is too complex
        # and expands to nothing
        name: ${{ inputs.event_name == 'push' && github.ref_name || inputs.event_number }}-${{ inputs.id }}_logfiles
        path: ${{ inputs.archive }}/${{ inputs.event_name == 'push' && github.ref_name || inputs.event_number }}/${{ inputs.id }}/
        include-hidden-files: true

    - name: Set completed status
      if: ${{ always() }}
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.repos.createCommitStatus({
            owner:        context.repo.owner,
            repo:         context.repo.repo,
            sha:          '${{ inputs.event_name == 'push' && github.sha || inputs.sha }}',
            target_url:   '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}',
            description:  '${{ inputs.name }}',
            context:      '${{ inputs.host }}/${{ inputs.id }}',
            state:        '${{ job.status == 'success' && 'success' || 'failure' }}'
          })

    - name : Remove '${{ inputs.label }}' label
      if : ${{ !cancelled() && inputs.event_label == inputs.label }}
      env:
        PR_NUMBER: ${{ inputs.event_number }}
      run: |
        curl \
          -X DELETE \
          -H "Accept: application/vnd.github.v3+json" \
          -H 'Authorization: token ${{ github.token }}' \
          https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/${PR_NUMBER}/labels/${{ inputs.label }}
    


  
